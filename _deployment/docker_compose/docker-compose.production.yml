version: '3.7'

services:


# Client - Web User & Admin
  feeds_reader_client_production:
    container_name: feeds_reader_client_${MY_CUSTOM_ENV_DOCKER}
    image: feeds_reader_client_${MY_CUSTOM_ENV_DOCKER}
    build:
      context: ../../client
      dockerfile: ./Dockerfile.${MY_CUSTOM_ENV_DOCKER}
    restart: always
    volumes:
      - feeds_reader_client_volume_${MY_CUSTOM_ENV_DOCKER}:/opt/dist/
      - /opt/app/node_modules
    depends_on:
      - feeds_reader_server_${MY_CUSTOM_ENV_DOCKER}
    env_file:
      - .env
    networks:
      - feeds_reader_network_${MY_CUSTOM_ENV_DOCKER}


# Server
  feeds_reader_server_production:
    container_name: feeds_reader_server_${MY_CUSTOM_ENV_DOCKER}
    image: feeds_reader_server_${MY_CUSTOM_ENV_DOCKER}
    build:
      context: ../../server
      dockerfile: ./Dockerfile.${MY_CUSTOM_ENV_DOCKER}
    restart: always
    volumes:
      - ../../server:/opt/app
      - ../../_deployment/logs/${MY_CUSTOM_ENV_DOCKER}/server_backend:/opt/logs
    env_file:
      - .env
    environment:
      - DEPLOYMENT_ENV=${MY_CUSTOM_ENV_DOCKER}
      - DB_HOST=feeds_reader_database_production
      - DB_PORT=5432
      - DB_NAME=feeds_reader
      - DB_USER=feeds_reader
      - DB_PASSWORD=sefdKJHGDedsfq21
    depends_on:
      - feeds_reader_database_${MY_CUSTOM_ENV_DOCKER}
      - feeds_reader_cache_redis_${MY_CUSTOM_ENV_DOCKER}
    networks:
      - feeds_reader_network_${MY_CUSTOM_ENV_DOCKER}


# Redis
  feeds_reader_cache_redis_production:
    image: feeds_reader_cache_redis_${MY_CUSTOM_ENV_DOCKER}
    container_name: feeds_reader_cache_redis_${MY_CUSTOM_ENV_DOCKER}
    build:
      context: ./redis/${MY_CUSTOM_ENV_DOCKER}
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./redis/${MY_CUSTOM_ENV_DOCKER}/mounted/data:/data
      - ./redis/${MY_CUSTOM_ENV_DOCKER}/mounted/config/redis.conf:/usr/local/etc/redis/redis.conf
      - ../logs/${MY_CUSTOM_ENV_DOCKER}/redis:/var/log/redis
    env_file:
      - .env
    networks:
      - feeds_reader_network_${MY_CUSTOM_ENV_DOCKER}

# Database
  feeds_reader_database_production:
    container_name: feeds_reader_database_${MY_CUSTOM_ENV_DOCKER}
    image: feeds_reader_database_${MY_CUSTOM_ENV_DOCKER}
    build:
      context: ./postgres/${MY_CUSTOM_ENV_DOCKER}
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./postgres/${MY_CUSTOM_ENV_DOCKER}/mounted/data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_ADMIN_PASSWORD_PRODUCTION}
    networks:
      - feeds_reader_network_${MY_CUSTOM_ENV_DOCKER}


# Database PGAdmin
  feeds_reader_pgadmin_production:
    image: feeds_reader_pgadmin_${MY_CUSTOM_ENV_DOCKER}
    container_name: feeds_reader_pgadmin_${MY_CUSTOM_ENV_DOCKER}
    build:
      context: ./pgadmin/${MY_CUSTOM_ENV_DOCKER}
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - feeds_reader_database_${MY_CUSTOM_ENV_DOCKER}
    ports:
      - ${PORT_PGADMIN_PRODUCTION}:${PORT_PGADMIN_PRODUCTION}
    volumes:
      - ./pgadmin/${MY_CUSTOM_ENV_DOCKER}/mounted/data:/var/lib/pgadmin
    env_file:
      - .env
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_ADMIN_EMAIL_PRODUCTION}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD_PRODUCTION}
      - PGADMIN_LISTEN_ADDRESS=0.0.0.0
      - PGADMIN_LISTEN_PORT=${PORT_PGADMIN_PRODUCTION}
    networks:
      - feeds_reader_network_${MY_CUSTOM_ENV_DOCKER}


# nginx
  feeds_reader_nginx_production:
    container_name: feeds_reader_nginx_${MY_CUSTOM_ENV_DOCKER}
    image: nginx:1.19.0-alpine
    restart: always
    volumes:
      - feeds_reader_client_volume_${MY_CUSTOM_ENV_DOCKER}:/opt/dist
      - ./nginx/${MY_CUSTOM_ENV_DOCKER}/mounted/ssl:/opt/ssl
      - ./nginx/${MY_CUSTOM_ENV_DOCKER}/mounted/config:/etc/nginx/conf.d
      - ../logs/${MY_CUSTOM_ENV_DOCKER}/nginx:/var/log/nginx/feeds_reader
    depends_on:
      - feeds_reader_client_${MY_CUSTOM_ENV_DOCKER}
      - feeds_reader_server_${MY_CUSTOM_ENV_DOCKER}
    ports:
      - ${PORT_CLIENT_USER_PRODUCTION}:${PORT_CLIENT_USER_PRODUCTION}
      - ${PORT_CLIENT_ADMIN_PRODUCTION}:${PORT_CLIENT_ADMIN_PRODUCTION}
      - ${PORT_SERVER_PRODUCTION}:${PORT_SERVER_PRODUCTION}
    networks:
      - feeds_reader_network_${MY_CUSTOM_ENV_DOCKER}

networks:
  feeds_reader_network_production:
    driver: bridge

volumes:
  feeds_reader_client_volume_production:
    driver: local



